@use './size' as *;
@use 'sass:map';
@use 'sass:list';
@use 'sass:meta';

//-------------------------------------------
// Desktop First -> max-width
// Mobile First -> min-width
// ------------------------------------------
$breakpoints: (
  //  Desktop (1600 ~ 1859)
  'breakpoint-2xl': (
      max-width: rem(1860px),
    ),
  //  Desktop (1280 ~ 1659)
  'breakpoint-xl': (
      max-width: rem(1660px),
    ),
  //  large tablet (1024 ~ 1279)
  'breakpoint-lg': (
      max-width: rem(1279px),
    ),
  //  small tablet (768 ~ 1023)
  'breakpoint-md': (
      max-width: rem(1023px),
    ),
  //  small handset (480 ~ 767)
  'breakpoint-sm': (
      max-width: rem(767px),
    ),
  //  x-small handset (0 ~ 479)
  'breakpoint-xs': (
      max-width: rem(479px),
    )
) !default;

// Usage
// .selector {
//   color: red;

//   @include respond-to('small') {
//     color: blue;
//   }
// }
// https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/

//---------------------------------------------------------------------------------------------------------------

//-------------------------------------------
//  Breakpoints - grid-system에서 사용되고 있어서 유지, 다른 곳에서는 사용하지 않음
// ------------------------------------------
// 전역 변수를 정의하는 `_vars.scss` 파일의 `$grid-breakpoints`에 정의된 map을 `$breakpoints` 인수로 사용합니다.
//
//   Breakpoints
//   ==========================================
//   xs    ||  0
//   sm    ||  640px
//   md    ||  768px
//   lg    ||  1024px
//   xl    ||  1280px
//   2xl   ||  1440px
//   ==========================================
//

// 다음 중단점, 또는 마지막 중단점의 이름.
//  >> breakpoint-next(sm)
//  md
//  >> breakpoint-next(sm, (xs: 0, sm: 640px, md: 768px, lg: 1024px, xl: 1280px))
//  md
//  >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//  md
@function breakpoint-next(
  $name,
  $breakpoints: $grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @if not $n {
    @error "`#{$breakpoints}`에서 `#{$name}` breakpoint를 찾지 못했습니다.";
  }
  @return if($n < list.length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// 최소 width 기준 breakpoint
//  >> breakpoint-min(sm, (xs: 0, sm: 640px, md: 768px, lg: 1024px, xl: 1280px))
//  640px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Maximum breakpoint width.
// The maximum value is reduced by 0.02px to work around the limitations of
// `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//  >> breakpoint-max(md, (xs: 0, sm: 640px, md: 768px, lg: 1024px, xl: 1280px))
//  767.98px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, '', '-#{$name}');
}

// 최소 breakpoint 너비에 따른 미디어 쿼리.
// @content를 지정된 breakpoint와 그보다 넓은 사이즈일 때 적용한다.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// 최대 breakpoint 너비에 따른 미디어 쿼리
// @content를 지정된 breakpoint와 그보다 좁은 사이즈일 때 적용한다.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}
