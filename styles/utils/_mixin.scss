@use 'variables' as *;
@use 'size' as *;
@use 'typography' as *;
@use 'sass:list';

// -------------------------
// mixin
// -------------------------

@mixin button-reset {
  width: 100%;
  display: inline-flex;
  align-items: center;
  flex-shrink: 0;
  text-decoration: none;
  white-space: nowrap;
  border: none;
  cursor: pointer;

  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }
}

// utilities style
@mixin generate-utility($utility) {
  $values: map-get($utility, values);

  @if type-of($values) == 'string' or type-of(nth($values, 1)) != 'list' {
    $values: zip($values, $values);
  }

  @each $key, $value in $values {
    $properties: map-get($utility, property);

    @if type-of($properties) == 'string' {
      $properties: append((), $properties);
    }

    $property-class: map-get($utility, class);
    $property-class: if($property-class, $property-class, nth($properties, 1));

    $property-class-modifier: if($key, '-' + $key, '');

    .#{$property-class + $property-class-modifier} {
      @each $property in $properties {
        #{$property}: $value !important;
      }
    }
  }
}

// width, height Size : 넓이, 높이 클래스 모음
$sizes:
  80, 90, 100, 112, 120, 128, 140, 160, 180, 200, 210, 220, 240, 260, 280, 300, 320, 340, 360, 380,
  400, 440, 460, 500, 600, 640, 720, 800, 840, 900, 1024, 1080 !default;
@mixin generate-size {
  @each $prop, $abbrev in (width: w, height: h) {
    @each $size in $sizes {
      .#{$abbrev}-#{$size} {
        #{$prop}: #{$size} + 'px' !important;
      }
    }
  }
}

// gap
@mixin gap($value) {
  @if list.length($value) == 1 {
    gap: $value;
  }
  @if list.length($value) == 2 {
    row-gap: nth($value, 1);
    column-gap: nth($value, 2);
  }
}

// @include multi-text-overflow(line-height 값, 줄 수)
@mixin multi-text-overflow($line-height, $lines) {
  display: block;
  display: -webkit-box;
  overflow: hidden;
  max-height: $line-height * $lines;
  line-height: rem($line-height);
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  word-wrap: break-word;
}

// 한줄 말줄임 적용
@mixin text-overflow($width: false) {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;

  @if ($width) {
    width: $width;
  }
}

// inherit
@mixin inherit {
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
  color: inherit;
}

// 숨김 처리
@mixin hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: 1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  visibility: visible;
  white-space: nowrap;
}

// 의미있는 이미지 대체 텍스트 (IR - Image Replacement)
@mixin ir-pm {
  /* 레이아웃에 영향을 끼치지 않도록 */
  position: absolute;
  /* 스크린 리더가 읽을 수 있도록 */
  width: 1px;
  height: 1px;
  /* 눈에 보이는 부분을 제거 */
  clip: rect(0 0 0 0);
  margin: -1px;
  overflow: hidden;
}

// table 숨김 처리
@mixin caption-out {
  width: 0;
  height: 0;
  padding: 0;
  margin: 0;
  visibility: hidden;
}

// 일정한 패딩 적용
@mixin stable-padding($padding-up-and-down, $padding-both-sides) {
  padding: $padding-up-and-down $padding-both-sides;
}

// svg 아이콘 사이즈 적용
@mixin svg-icon-size($size) {
  width: $size;
  height: $size;
}

// svg 아이콘 stroke 두께 설정
@mixin svg-icon-stroke($stroke-color) {
  stroke: $stroke-color;
  stroke-width: 1;
  stroke-opacity: 0.4;
}

// 스크롤 안되도록 처리
@mixin not-scroll {
  overflow: hidden !important;
  height: unset !important;
}

// 스크롤
@mixin scroll() {
  overflow: auto !important;

  &-x,
  &--horizontal {
    overflow-x: auto !important;
    overflow-y: hidden !important;
  }

  &-y,
  &--vertical {
    overflow-y: auto !important;
    overflow-x: hidden !important;
  }
}

// 스크롤바 디자인 적용
@mixin custom-scrollbar {
  -webkit-overflow-scrolling: touch;
  overflow: auto;
  scrollbar-color: #a1a1a1 #f2f2f2;
  scrollbar-width: thin;

  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 6px;
    border: none;
    background: rgba(0, 0, 0, 0.35);
  }

  &::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 6px;
  }
}

// 불투명 배경 처리
@mixin overlay-blur {
  backdrop-filter: blur(rem(10px));
}

// bullet
@mixin bullet($name, $padding, $top: false, $left: false) {
  &:not(ul),
  & > li {
    position: relative;
    padding-left: $padding;
    text-align: left;
    word-break: keep-all;

    &::before {
      @if $name == 'refer' {
        content: '※';
        @include font-family('sans');
      } @else if $name == 'rect' {
        content: ' \25AA';
      } @else if $name == 'hyphen' {
        content: '-';
      } @else if $name == 'ast' {
        content: '*';
      } @else if $name == 'caret' {
        content: '';
        width: rem(6px);
        height: rem(10px);
        border-radius: rem(2px);
        background-color: $primary;
        clip-path: polygon(0 0, 0% 100%, 100% 50%);
      } @else {
        content: '';
      }

      position: absolute;
      left: $left;
      top: $top;
    }
  }
}
